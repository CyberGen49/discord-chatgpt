{
    "title": "discord-chatgpt Configuration Schema",
    "properties": {
        "openai": {
            "type": "object",
            "description": "OpenAI settings",
            "properties": {
                "secret": {
                    "type": "string",
                    "description": "Your OpenAI secret key."
                }
            }
        },
        "discord": {
            "type": "object",
            "description": "Discord bot settings",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Your Discord bot's application ID."
                },
                "token": {
                    "type": "string",
                    "description": "Your Discord bot token."
                },
                "owner_id": {
                    "type": "string",
                    "description": "Your Discord user ID."
                },
                "status": {
                    "type": "object",
                    "description": "The Discord bot's status.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The status type/prefix",
                            "enum": [
                                "Playing",
                                "Listening",
                                "Watching"
                            ]
                        },
                        "text": {
                            "type": "string",
                            "description": "The text of the status"
                        }
                    }
                }
            }
        },
        "system_prompt": {
            "type": "string",
            "description": "The initial system message to send with every request to the language model. This message can be used to influence the behaviour of the model.",
            "markdownDescription": "The initial system message to send with every request to the language model. This message can be used to influence the behaviour of the model.\n\nThere are a handful of placeholders you can use to customize the message for each interaction:\n* `{bot_username}`: The bot's username\n* `{user_username}`: The user's username\n* `{user_nickname}`: The user's server nickname, or their username if they have no nickname\n"
        },
        "max_input_tokens": {
            "type": "integer",
            "description": "The maximum length in text tokens that a user's input can be."
        },
        "max_output_tokens": {
            "type": "integer",
            "description": "The maximum length in text tokens that the language model's response should be."
        },
        "usd_per_token": {
            "type": "number",
            "description": "The price, in USD, of each text token. This is used to display cost values in the stats command.\nOpenAI normally advertizes prices per 1000 tokens, so be sure to divide by 1000 when setting this value."
        },
        "delete_message_days": {
            "type": "number",
            "description": "Message entries in the database will be deleted when they reach this many days old. Set to 0 to disable automatic deletion."
        },
        "public_usage": {
            "type": "boolean",
            "description": "When true, any user will be able to use the bot. When false, only users allowed through the users allow command or by request will be able to use the bot.",
            "markdownDescription": "When `true`, any user will be able to use the bot. When `false`, only users allowed through the users allow command or by request will be able to use the bot."
        },
        "ignore_prefixes": {
            "type": "array",
            "description": "Messages targeting the bot starting with any of these strings will be ignored.",
            "items": {
                "type": "string"
            }
        },
        "show_regenerate_button": {
            "type": "boolean",
            "description": "When true, a \"Regenerate\" button will be included in all language model responses. Responses can also be regenerated from the Apps menu, regardless of this setting.",
            "markdownDescription": "When `true`, a \"Regenerate\" button will be included in all language model responses. Responses can also be regenerated from the Apps menu, regardless of this setting."
        },
        "http_server": {
            "type": "object",
            "description": "HTTP server settings",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not to enable the HTTP server. Requests to /invite will redirect to the bot's invite URL, and all other requests will redirect to the GiHub repository."
                },
                "port": {
                    "type": "integer",
                    "description": "The port to host the HTTP server on, if enabled."
                }
            }
        }
    }
}